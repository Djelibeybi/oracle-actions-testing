name: Test oracle-actions/run-oci-cli-command

on:
  workflow_dispatch:
  push:
    branches:
      "main"
    paths:
      - ".github/workflows/run-oci-cli-command.yml"
  pull_request:
    branches:
    - "main"
    paths:
      - ".github/workflows/run-oci-cli-command.yml"

jobs:
  basic-commands:
    runs-on: ubuntu-latest
    name: Sanity test run-oci-cli-command action
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Retrieve the OCID of a named compartment in tenancy
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: find-compartment-id
        with:
          command: 'iam compartment list --compartment-id-in-subtree=true'
          query: "data[?name=='github-actions'].id"

      - name: Confirm output from previous step
        id: confirm-find-instance-id-output
        run: |
          echo "Output: ${{ steps.find-compartment-id.outputs.output }}"
          echo "Raw output: ${{ steps.find-compartment-id.outputs.raw_output }}"

  complex-commands:
    runs-on: ubuntu-latest
    name: Sanity test complex run-oci-cli-command action use cases
    needs: basic-commands
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Create metadata JSON
        id: create-json
        run: |
          echo "metadata={\"created_by\":\"$GITHUB_ACTOR\",\"triggered_by\":\"$GITHUB_EVENT_NAME\"}" >> $GITHUB_OUTPUT
          echo "deployargs={\"items\":[{\"name\":\"namespace\",\"value\":\"github\"},{\"name\":\"image_tag\",\"value\":\"$GITHUB_RUN_NUMBER\"}]}" >> $GITHUB_OUTPUT

      - name: Create a uniquely named file
        id: create-file
        run: |
          TEST_FILE_FULL_PATH=$(mktemp)
          TEST_FILE_NAME=$(basename $TEST_FILE_FULL_PATH)
          echo "The file at ${TEST_FILE_FULL_PATH} created by ${GITHUB_ACTOR} and was triggered by ${GITHUB_EVENT_NAME}" | tee $TEST_FILE_FULL_PATH
          echo "filename=${TEST_FILE_NAME}" >> $GITHUB_OUTPUT
          echo "filepath=${TEST_FILE_FULL_PATH}" >> $GITHUB_OUTPUT

      - name: Display and save the generated JSON
        run: |
          echo '${{ steps.create-json.outputs.metadata }}' | jq
          echo '${{ steps.create-json.outputs.deployargs }}' | tee -a ${{ steps.create-file.outputs.filepath }}

      - name: Upload the test file to object storage
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: upload-file
        with:
          command: os object put -ns ${{ secrets.NAMESPACE }} -bn ${{ secrets.STORAGE_BUCKET }} --name ${{ steps.create-file.outputs.filename }} --file ${{ steps.create-file.outputs.filepath }} --metadata ${{ toJSON(steps.create-json.outputs.metadata) }}

      - name: Show then delete file
        id: show-delete-file
        run: |
          cat ${{ steps.create-file.outputs.filepath }}
          rm -f ${{ steps.create-file.outputs.filepath }}

      - name: Remove the test file from object storage
        uses: oracle-actions/run-oci-cli-command@v1.3.2
        id: delete-file-object-store
        with:
          command: os object delete -ns ${{ secrets.NAMESPACE }} -bn ${{ secrets.STORAGE_BUCKET }} --name ${{ steps.create-file.outputs.filename }} --force
